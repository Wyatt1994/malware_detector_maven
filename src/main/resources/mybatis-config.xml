<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
		PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-config.dtd" >
<configuration>

	<!--
		1.mybtis可使用properties标签引入propertiees配置文件的内容
		resourve：引入类路径下的资源
		url:引入网络路径或者磁盘路径下的资源
	-->
	<properties resource="dbconfig.properties"></properties>

	<!--
		2.setttings标签用于设置很多重要的设置
		name:设置项名  value:取值
	-->

	<!--驼峰命名转换-->
	<settings>
		<setting name="cacheEnabled" value="true"/>
		<setting name="mapUnderscoreToCamelCase" value="true"/>
		<!--延迟加载-->
		<setting name="lazyLoadingEnabled" value="true"></setting>
		<!--侵入延迟加载，当需要任一个属性时，其他所有属性全部加载-->
		<setting name="aggressiveLazyLoading" value="false"></setting>
	</settings>





	<!--4.environments:环境配置
	   		environment：具体的一个环境信息，必须包含transactionManger和dataSource标签
	   		实际开发中，可以通过default配置切换不同环境，例如测试数据库环境和实际开发环境。
	   		transactionManager:事务管理器
	   			type:事务管理器类型：JDBC,MANAGED。一般不考虑，使用Spring的事务管理器
	   				自定义事务管理器：实现transactionfactory接口，type指明全类名
	   			dataSource:数据源类型，UNPOOLED:不适用连接池，即每次访问都查数据库，不适用缓存池
	   									POOLED:使用连接池
	   									JNDI:
	   						自定义数据源：例如使用c3p0数据源，实现Datasourcefactory接口，type为全类名
	   		-->

	<environments default="dev_mysql">
		<environment id="dev_mysql">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>



</configuration>