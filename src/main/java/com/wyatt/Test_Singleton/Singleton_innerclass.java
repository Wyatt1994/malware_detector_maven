package com.wyatt.Test_Singleton;

/**
 * Created by ASUS on 2018/11/4.
 */

//利用静态内部类只会被jvm加载一次
public class Singleton_innerclass {
    private Singleton_innerclass(){

    }

    /**
    * 类级的内部类，也就是静态的成员式内部类，该内部类的实例与外部类的实例
    * 没有绑定关系，而且只有被调用到才会装载，从而实现了延迟加载
    */
    private static class inner_class{
        private static Singleton_innerclass singleton=new Singleton_innerclass();
    }

    public static Singleton_innerclass getSingleton(){
        return inner_class.singleton;
    }

    public static void main(String[] args) {
        Singleton_innerclass s1=Singleton_innerclass.getSingleton();
    }
}
