package com.wyatt.blocking_queue;


import java.io.IOException;
import java.util.Arrays;
import java.util.concurrent.*;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

/**
 * Created by ASUS on 2018/11/21.
 */
public class LinkedTransferQueueTest {
    private static LinkedTransferQueue<Integer> queue=new LinkedTransferQueue<>();

    public static void main(String[] args) {
        Integer a=5;
        int b=5;
        System.out.println(a==b);
        try {
            Class clazz=Class.forName("java.lang.String");
            System.out.println(clazz);
            Class clazz1=ClassLoader.getSystemClassLoader().loadClass("java.lang.String");
            System.out.println(clazz1==clazz);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }

        System.exit(1);
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    Thread.sleep(500);
                    //消费者晚于第一个生产者的tryTransfer(1)，因此会消费不到
                    System.out.println(Thread.currentThread().getName()+"-"+queue.take());
                    System.out.println(Thread.currentThread().getName()+"-"+queue.take());
                    System.out.println(Thread.currentThread().getName()+"-"+queue.take());
                } catch (InterruptedException e1) {
                    e1.printStackTrace();
                }
            }
        },"consumer").start();
        new Thread(new Runnable() {
            @Override
            public void run() {
                //由于消费者在生产者之后执行，因此tryTranfer执行失败，且不进入队列
                System.out.println(Thread.currentThread().getName()+"-"+queue.tryTransfer(1));
                try {
                    System.out.println(Thread.currentThread().getName()+"-等待2被消耗："+queue.tryTransfer(2, 1, TimeUnit.SECONDS));
                    queue.transfer(3);
                    System.out.println(Thread.currentThread().getName()+"-"+"等待3被消费：true");
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        },"prodcuer").start();

    }
}
