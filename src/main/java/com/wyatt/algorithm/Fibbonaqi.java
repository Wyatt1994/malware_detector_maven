package com.wyatt.algorithm;

import com.sun.scenario.effect.impl.sw.sse.SSEBlend_SRC_OUTPeer;
import org.junit.Test;
import org.junit.runners.ParentRunner;

import java.io.UnsupportedEncodingException;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicInteger;

/**
 * Created by ASUS on 2018/11/4.
 */


/**
 * 斐波那契，求兔子总数问题：主要思想：把兔子分为3种状态（默认2个月兔子才能成熟产仔）：大兔子，1月大的小兔子，2月大的小兔子
 * 因此，某月的兔子总数=上月兔子总数+上上月的兔子总数
 */

public  class Fibbonaqi{


    public static void main(String[] args) throws UnsupportedEncodingException {
        String a="a";
        String b=new String("a");
        System.out.println(a==b);
        char c='c';
        byte d='d';
        char e='e';
        int f=c+d;
        System.out.println(c);
        System.out.println(d);
        System.out.println(d);
        System.out.println(f);
        char s='我';
        System.out.println();
        System.exit(1);
        final int NUM=13;
        long[] fib=new long[NUM];
        fib[0]=1;
        fib[1]=1;

        for (int i = 2; i <13 ; i++) {
            fib[i]=fib[i-1]+fib[i-2];
        }
        for (int j = 0; j < NUM; j++) {
            System.out.println("第"+j+"月的兔子总数为"+fib[j]);
        }

    }
    public boolean Find(int target,int[][] array){
        int row_num=array.length;
        int col_num=array[0].length;
        int i=0;
        int j=0;
        if (array[0][0]>target||array[row_num][col_num]<target){
            return false;
        }

        else {
            for (;target<=array[0][j]&&j<col_num;j++){
                if (target==array[0][j]){
                    return true;
                }
            }
            for (;target<=array[i][j-1]&&i<row_num;i++){
                if (target==array[i][j-1]){
                    return true;
                }
            }
            for (int k=0;k<i;k++){
                for (int h=0;h<j;h++){
                    if (array[k][h]==target){
                        return true;
                    }
                }
            }
            return false;
        }
    }
}
