package com.wyatt.zookeeper;

import org.apache.zookeeper.WatchedEvent;
import org.apache.zookeeper.Watcher;
import org.apache.zookeeper.ZooKeeper;
import org.apache.zookeeper.data.Stat;
import org.apache.zookeeper.server.ServerCnxnFactory;

import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.CountDownLatch;

/**
 * Created by ASUS on 2018/11/15.
 */
public class ZookeeperTest implements Watcher{
    private static CountDownLatch connectedSemaphore=new CountDownLatch(1);
    private static ZooKeeper zk=null;
    private static Stat stat=new Stat();

    public static void main(String[] args) throws Exception {
        //zookeeper配置数据存放路径，即设定监听的节点
        String path="/wyatt";
        //连接zookeeper并且注册一个默认的监听器
        //对应ip端口，会话超时时间和watcher，即监听者
        zk=new ZooKeeper("192.168.175.132:2181",5000,new ZookeeperTest());
        //等待zk连接成功的通知
        connectedSemaphore.await();
        //获取监听的path目录节点（/wyatt）的配置数据，并注册默认的监听器
        //加入zk上创建的节点
        System.out.println(new String(zk.getData(path,true,stat)));

        Thread.sleep(Integer.MAX_VALUE);


    }

    @Override
    public void process(WatchedEvent event) {
        //zk连接成功通知事件
        if (Event.KeeperState.SyncConnected==event.getState()){
            if (Event.EventType.None==event.getType()&&null==event.getPath()){
                connectedSemaphore.countDown();
            }
            //监听的zk目录节点发生变化
            else if (event.getType()== Event.EventType.NodeDataChanged){
                try {
                    System.out.println("配置文件已变动，新值为："+new String(zk.getData(event.getPath(),true,stat)));
                }catch (Exception e){
                    e.printStackTrace();
                }
            }
        }
    }
}
