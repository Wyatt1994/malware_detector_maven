package com.wyatt.learn08;

import java.io.*;

/**
 * 输入缓冲流
 * Created by ASUS on 2018/10/18.
 */
public class TestBuffered01 {
    public static void main(String[] args) {

    }
    public static void test1(){
        //选择File源
        File f=new File("3.txt");
        InputStream is=null;
        BufferedInputStream bis=null;
        //选择流
        try {
            System.out.println(f.length());
            is=new FileInputStream(f);
            bis=new BufferedInputStream(is);
            //操作
            byte[] flush=new byte[1024];
            int len=-1;
            while ((len=is.read(flush))!=-1){//read()方法返回-1则说明到文件末尾,read(car)返回读取的字节数
                String str=new String(flush,0,len);//len是记录有效数据长度
                System.out.println(str);
            }

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }finally {
            //释放资源
            //关闭is不是必要的，关闭bis默认会关闭is
            if (is!=null){
                try {
                    is.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            if (bis!=null){
                try {
                    bis.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    //将BufferINputStream和inputStream组合简写
    public static void test2(){
        //选择File源
        File f=new File("3.txt");
        InputStream is=null;
        //选择流
        try {
            System.out.println(f.length());
            is=new BufferedInputStream(new FileInputStream(f));
            //操作
            byte[] flush=new byte[1024];
            int len=-1;
            while ((len=is.read(flush))!=-1){//read()方法返回-1则说明到文件末尾,read(car)返回读取的字节数
                String str=new String(flush,0,len);//len是记录有效数据长度
                System.out.println(str);
            }

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }finally {
            //释放资源
            if (is!=null){
                try {
                    is.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

        }
    }
}
