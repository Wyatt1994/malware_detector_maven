package com.wyatt.threadpool;

import java.nio.ByteBuffer;
import java.util.ConcurrentModificationException;
import java.util.concurrent.*;
import java.util.concurrent.locks.ReentrantLock;

/**
 * Created by ASUS on 2018/11/23.
 */
public class Runnable_Test implements Runnable{
    public Runnable_Test(String acceptStr) {
        this.acceptStr = acceptStr;
    }

    private String acceptStr;

    @Override
    public void run(){
        // 任务阻塞 1 秒
        acceptStr="append some chars";
    }


    public static void main(String[] args) throws ExecutionException, InterruptedException {
        Runnable runnable = new Runnable_Test("my runnable test!");
        String result="";
        FutureTask<String> task = new FutureTask<>(runnable,result);
        long beginTime = System.currentTimeMillis();
        // 创建线程
        new Thread(task).start();
        // 调用get()阻塞主线程，反之，线程不会阻塞
        String result1 = task.get();
        long endTime = System.currentTimeMillis();
        System.out.println("hello : " + result1);
        System.out.println("cast : " + (endTime - beginTime) / 1000 + " second!");
    }
}
