package com.wyatt.produce_consumer;

import java.util.Stack;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

/**
 * Created by ASUS on 2018/11/20.
 */
public class BlockingQueue_Test<E> {

    public static void main(String[] args) {
        BlockingQueue queue=new LinkedBlockingQueue(3);
        for (int i = 0; i < 5; i++) {
            //生产者
            new Thread(new Producer1(queue)).start();
            //消费者
            new Thread(new Consumer1(queue)).start();
        }

    }
}
class Producer1 implements Runnable{
    private BlockingQueue queue;
    public Producer1(BlockingQueue queue){
        this.queue=queue;
    }

    public void run() {
        String pro_name="producer_"+Thread.currentThread().getName();
        String product="made by"+pro_name;
        System.out.println(pro_name+"生产了一个产品");
        try {
            queue.put(product);
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

    }
}

class Consumer1 implements Runnable{
    private BlockingQueue queue;
    public Consumer1(BlockingQueue queue){
        this.queue=queue;
    }

    @Override
    public void run() {
        String con_name="consumer_"+Thread.currentThread().getName();
        try {
            System.out.println(con_name+"消费了一个商品"+queue.take());
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}
