package com.wyatt;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.*;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.Semaphore;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

/**
 * Created by ASUS on 2018/11/26.
 */
public class Test {

    private static CountDownLatch hello_cdl = new CountDownLatch(5);

    public void show(){
        System.out.println("ee");
    }
    public static void main(String[] args) throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        List<Integer> list=new ArrayList<Integer>();
        Method method=list.getClass().getMethod("add", Object.class);
        method.invoke(list,"我是String");
        System.out.println(list.get(0));
        Test test=new jicheng();
        test.show();
        List<Test> list1=new ArrayList<>();
        List<jicheng> list2=new ArrayList<>();
        List<?extends Test> list3=new ArrayList<>();
        List<Object> list4=new ArrayList<>();
        list3=list2;
        String a ="a"+"b";
        String c = "ab";
        System.out.println(a==c);
        for (int i = 0; i < 5; i++) {
            new PrintThread().start();
        }


    }

    static class PrintThread extends Thread{
        @Override
        public void run() {
            try {
                hello_cdl.countDown();
                System.out.println("hello");
                hello_cdl.await();
                System.out.println("world");

<<<<<<< HEAD
            }catch (Exception e){
                e.printStackTrace();
            }
        }
=======

>>>>>>> a4898bc6e364c29ca08c711bfc014e4e75f4a9b6
    }



}
class jicheng extends Test{
    public static int a=5;
    public jicheng(){
        System.out.println("gouzao");
    }
    static {
        System.out.println("hhh");
    }
    public void show(){
        System.out.println("dd");
    }
}
